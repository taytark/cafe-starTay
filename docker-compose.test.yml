version: '3.8'
services:
  backend-test:
    build: { context: ., dockerfile: ./backend/Dockerfile }
    ports: [ "3002:3001" ]
    environment:
      NODE_ENV: test
      PORT: 3001
      DB_HOST: db-test
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${TEST_DB_NAME}
      DB_WAIT_HOST: db-test
      DB_WAIT_PORT: 5432
    depends_on: [ db-test ]
    networks: [ cafe-startay-test-network ]
  frontend-test:
    build: { context: ., dockerfile: ./frontend/Dockerfile, args: { REACT_APP_BACKEND_URL: http://backend-test:3001/api } }
    ports: [ "8081:80" ]
    environment: { BACKEND_WAIT_HOST: backend-test, BACKEND_WAIT_PORT: 3001 }
    depends_on: [ backend-test ]
    networks: [ cafe-startay-test-network ]
  db-test:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: ${TEST_DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes: [ "db_test_data:/var/lib/postgresql/data" ]
    ports: [ "5433:5432" ] # Exemplo para acessar DB de teste localmente
    networks: [ cafe-startay-test-network ]
  robot-tests:
    build: { context: ., dockerfile: ./tests/Dockerfile.robot }
    environment:
      API_BASE_URL: http://backend-test:3001/api
      FRONTEND_BASE_URL: http://frontend-test:80
      DB_HOST: db-test
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${TEST_DB_NAME}
      NODE_ENV: test
    depends_on: [ backend-test, frontend-test, db-test ]
    networks: [ cafe-startay-test-network ]
    volumes:
      - ./tests:/app/tests
      - ./backend/src/config:/app/backend/src/config
      - ./backend/src/migrations:/app/backend/src/migrations
      - ./backend/src/seeds:/app/backend/src/seeds
      - ./scripts/wait-for-it.sh:/usr/local/bin/wait-for-it.sh
      - ./tests/entrypoint.sh:/usr/local/bin/entrypoint.sh
    entrypoint: [ "/usr/local/bin/entrypoint.sh" ]
networks: { cafe-startay-test-network: { driver: bridge } }
volumes: { db_test_data: {} }
